{"version":3,"sources":["keyImage.png","icon.png","Header.js","IsValid.js","Form.js","Loader.js","Results.js","Encode.js","Decode.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","type","data-toggle","data-target","aria-expanded","aria-label","href","src","icon","width","height","alt","id","exact","to","activeClassName","React","Component","IsValid","props","hasValue","valid","faCheckSquare","color","faTimesCircle","Form","onChange","e","target","name","value","setState","checkValidity","Object","keys","length","onSubmit","preventDefault","state","input","placeholder","this","pattern","disabled","onClick","Loader","Result","data","loading","result","map","x","key","Encode","test","event","a","async","url","fetch","then","resp","json","encoded","keyImage","Decode","isNaN","includes","ok","Error","statusText","decoded","catch","err","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4375e737.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/keyImage.6dfff224.png\";","module.exports = __webpack_public_path__ + \"static/media/icon.4302e052.png\";","import icon from \"./icon.png\";\nimport './Header.css';\nimport React from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-lg navbar-dark\">\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarToggler\"\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"/>\n                </button>\n                <a className=\"navbar-brand\" href={\"/encode\"}>\n                    <img src={icon} width='30' height='30' alt='' className={'invert'}/>\n                    &nbsp;Phone Number Decoder</a>\n\n                <div className=\"collapse navbar-collapse\" id=\"navbarToggler\">\n                    <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n                        <li className=\"nav-item\">\n                            <NavLink exact className='nav-link' to={\"/encode\"} activeClassName=\"active\">Encode</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink exact className='nav-link' to={\"/decode\"} activeClassName=\"active\">Decode</NavLink>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        )\n    }\n}\n\nexport default Header;","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCheckSquare, faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\n\nfunction IsValid(props) {\n    if (props.hasValue) {\n        if (props.valid) {\n            return <FontAwesomeIcon icon={faCheckSquare} color='green'/>;\n        } else {\n            return <FontAwesomeIcon icon={faTimesCircle} color='red'/>;\n        }\n    } else {\n        return <div/>;\n    }\n}\n\nexport default IsValid;","import React from \"react\";\nimport './Form.css';\nimport IsValid from \"./IsValid\";\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            input: '',\n            valid: false,\n            hasValue: false\n        };\n    }\n\n    onChange = (e) => {\n        const {name, value} = e.target;\n        this.setState({\n            valid: this.props.checkValidity(value),\n            hasValue: Object.keys(value).length > 0,\n            [name]: value\n        });\n    };\n\n    onSubmit = (e) => {\n        e.preventDefault();\n        this.props.onSubmit(this.state);\n        // reset form\n        this.setState({\n            input: '',\n            valid: false,\n            hasValue: false\n        })\n    };\n\n    render() {\n        return (\n            <form className='form-inline'>\n                <div className='form-group with-icon mr-2'>\n                    <input type='text'\n                           placeholder='Input'\n                           className='form-control pr-4'\n                           value={this.state.input}\n                           name='input'\n                           onChange={this.onChange}\n                           pattern=\"[0-9]*\"/>\n                    <div className='validityIndicator'>\n                        <IsValid valid={this.state.valid} hasValue={this.state.hasValue}/>\n                    </div>\n                </div>\n                <button className='btn btn-primary'\n                        type='submit'\n                        disabled={!this.state.valid}\n                        onClick={this.onSubmit}>Submit\n                </button>\n            </form>\n        )\n    }\n}\n\nexport default Form;","import React from \"react\";\nimport './Loader.css'\n\nfunction Loader() {\n    return (\n        <div className='spin'/>\n    )\n}\n\nexport default Loader;","import React from \"react\";\nimport Loader from \"./Loader\";\n\nconst Result = (props) => {\n    const data = props.data;\n    if (data.loading) return <Loader/>;\n    if (data.input) {\n        return (\n            <div>\n                <div className='my-3'>You entered: {data.input}</div>\n                {!data.result ?\n                    <div>No Results </div> :\n                    <div>\n                        <h5>Results</h5>\n                        <div>\n                            {(data.result.length > 1) ? <div>{data.result.map(x => <div key={x}>{x}</div>)}</div> : <div>{data.result}</div>}\n                        </div>\n                    </div>}\n            </div>\n        );\n    } else {\n        return <div/>;\n    }\n};\n\nexport default Result;","import React from \"react\";\nimport Form from \"./Form\";\nimport Result from \"./Results\";\nimport keyImage from \"./keyImage.png\";\n\nclass Encode extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            input: '',\n            result: '',\n            loading: false\n        };\n    }\n\n    checkValidity = (input) => {\n        return /^[a-zA-Z]+$/.test(input);\n    };\n\n    onSubmit = async (event) => {\n        this.setState({input: event.input, result: '', loading: true});\n        const url = `https://6e1pagj9va.execute-api.us-east-1.amazonaws.com/dev/encode?input=${event.input}`;\n        fetch(url)\n            .then(resp => resp.json())\n            .then(data => {\n                this.setState({\n                    loading: false,\n                    result: [data.encoded]\n                })\n            });\n    };\n\n    render() {\n        return (\n            <div className='m-5'>\n                <div className='row mx-1'>\n                    <h5>Directions</h5>\n                </div>\n                <div className='row mx-1 mb-2'>\n                    <h6>Input a word to receive the code using the key below.</h6>\n                </div>\n                <div className='row mx-1 mb-4'>\n                    <div>\n                        <h6><b>Key</b></h6>\n                        <img src={keyImage} alt={'keypad'}/>\n                    </div>\n                </div>\n                <div className='row mx-1 mb-2'>\n                    <Form onSubmit={this.onSubmit} checkValidity={this.checkValidity}/>\n                </div>\n                <div className='row mx-1'>\n                    <Result data={this.state}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Encode;","import React from \"react\";\nimport Form from \"./Form\";\nimport Result from \"./Results\";\nimport keyImage from './keyImage.png';\n\nclass Decode extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            input: '',\n            result: '',\n            loading: false\n        };\n    }\n\n    checkValidity = (input) => {\n        return !isNaN(input) && !input.includes('1');\n    };\n\n    onSubmit = async (event) => {\n        this.setState({input: event.input, result: '', loading: true});\n        fetch(`https://6e1pagj9va.execute-api.us-east-1.amazonaws.com/dev/decode?input=${event.input}&verifyWord=true`)\n            .then(resp => {\n                if (!resp.ok) {\n                    throw Error(resp.statusText);\n                }\n                return resp;\n            })\n            .then(resp => resp.json())\n            .then(data => {\n                this.setState({\n                    loading: false,\n                    result: data.decoded\n                })\n            }).catch(err => {\n            this.setState({loading: false, result: null})\n        });\n    };\n\n    render() {\n        return (\n            <div className='m-5'>\n                <div className='row mx-1'>\n                    <h5>Directions</h5>\n                </div>\n                <div className='row mx-1 mb-2'>\n                    <h6>Input a ten digit phone number to discover what, if any, words can be created with the key\n                        below.</h6>\n                </div>\n                <div className='row mx-1 mb-4'>\n                    <div>\n                        <h6><b>Key</b></h6>\n                        <img src={keyImage} alt={'keypad'}/>\n                    </div>\n                </div>\n                <div className='row mx-1 mb-2'>\n                    <Form onSubmit={this.onSubmit} checkValidity={this.checkValidity}/>\n                </div>\n                <div className='row mx-1'>\n                    <Result data={this.state}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Decode;","import React from 'react';\nimport Header from './Header';\nimport {Route, Switch, Redirect} from \"react-router-dom\";\nimport Encode from \"./Encode\";\nimport Decode from \"./Decode\";\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div>\n                <Header/>\n                <main>\n                    <Switch>\n                        <Route exact path='/encode' component={Encode}/>\n                        <Route exact path='/decode' component={Decode}/>\n                        <Route exact path='/'>\n                            <Redirect to='/encode'/>\n                        </Route>\n                    </Switch>\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}